q
c
req
req.parse_line(line)
line = client.gets
c
req
line
req.parse_line
req
req.parse_line(line)
break Request#parse_line
req.finished?
line
req.parse_line(line)
line
req.parse_line(line)
req.finished?
line.strip.length
line = client.gets
c
line = client.gets
c
line = client.gets
c
client.gets
req.finished?
re.finished?
req
req.parse_line(line)
line = client.gets
req.parse_line(line)
line = client.gets
req.parse_line(line)
line = client.gets
req.parse_line(line)
line = client.gets
req.parse_line(line)
line = client.gets
req.parse_line(line)
line = client.gets
req.finished?
req
req.parse_line(line)
req
req.parse_line(line)
line = client.gets
req
req.parse_line(line)
line = client.gets
line
req.finished?
c
req.finished?
eq.finished
req
c
line
c
n
IntroController.templates
params
c
self.class.templates
c
self.class.templates
params[:tpl]
c
@users
n
@users
params[:reverse]
